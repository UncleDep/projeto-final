SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE DATABASE CALENDARIO;
USE CALENDARIO;

CREATE TABLE TIPO_USUARIO(
	CPF VARCHAR(12) NOT NULL,
    tipo INT(2) NOT NULL,
    PRIMARY KEY(CPF)
) ENGINE = InnoDB;

CREATE TABLE USUARIO(
	email VARCHAR(20) NOT NULL,
    username VARCHAR(20) NOT NULL,
    senha VARCHAR(100) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    sobrenome VARCHAR(100) NOT NULL,
    nascimento DATETIME NOT NULL,
    ID VARCHAR(11) NOT NULL,
    CPF VARCHAR(12) NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY(CPF) REFERENCES TIPO_USUARIO(CPF) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE TURMA(
	ID VARCHAR(50) NOT NULL,
    PRIMARY KEY(ID)
) ENGINE = InnoDB;

CREATE TABLE DISCIPLINA(
	 ID VARCHAR(50) NOT NULL, 
     nome_disciplina VARCHAR(100) NOT NULL,
     palestrante VARCHAR(11) NOT NULL,
     PRIMARY KEY(ID),
     FOREIGN KEY(palestrante) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE MATRICULA_DISCIPLINA( # apenas uma disciplina por professor
	ID INT(10) NOT NULL AUTO_INCREMENT, 
    USUARIO VARCHAR(100) NOT NULL,
    DISCIPLINA VARCHAR(50) NOT NULL, 
    PRIMARY KEY(ID),
    FOREIGN KEY(usuario) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(disciplina) REFERENCES DISCIPLINA(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE MATRICULA_TURMA(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    turma VARCHAR(50) NOT NULL,
    usuario VARCHAR(11) NOT NULL, # pode ser um professor ou aluno
    PRIMARY KEY(ID),
    FOREIGN KEY(usuario) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(turma) REFERENCES TURMA(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE ATIVIDADE(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    entrega BOOLEAN NOT NULL,
    data_de_entrega DATETIME,
    valor FLOAT(10) NOT NULL,
    titulo VARCHAR(120) NOT NULL,
    descricao TEXT NOT NULL,
    autor VARCHAR(11) NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY(autor) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE ATIVIDADE_TURMA(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    atividade INT(10) NOT NULL,
    turma VARCHAR(50) NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY(atividade) REFERENCES ATIVIDADE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(turma) REFERENCES TURMA(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE ATIVIDADE_DISCIPLINA(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    atividade INT(10) NOT NULL,
    disciplina VARCHAR(50) NOT NULL,
    PRIMARY KEY(ID),
    FOREIGN KEY(atividade) REFERENCES ATIVIDADE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(disciplina) REFERENCES DISCIPLINA(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE COMENTARIO(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    atividade INT(10) NOT NULL,
    comentario TEXT,
    autor VARCHAR(11) NOT NULL,
    ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(ID),
    FOREIGN KEY(atividade) REFERENCES ATIVIDADE(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(autor) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE RESPOSTA(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    comentario_mae INT(10) NOT NULL,
    comentario TEXT,
    autor VARCHAR(11) NOT NULL,
    ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(ID),
    FOREIGN KEY(comentario_mae) REFERENCES COMENTARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(autor) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

CREATE TABLE ATIVIDADE_HAS_USUARIO(
	ID INT(10) NOT NULL AUTO_INCREMENT,
    RESPOSTA TEXT NOT NULL,
    ALUNO VARCHAR(11) NOT NULL,
    ATIVIDADE INT(10) NOT NULL ,
    PRIMARY KEY(ID),
    FOREIGN KEY(ALUNO) REFERENCES USUARIO(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(ATIVIDADE) REFERENCES ATIVIDADE(ID) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;
